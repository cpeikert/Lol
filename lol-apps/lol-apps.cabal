name:                lol-apps
-- The package version.  See the Haskell package versioning policy (PVP)
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.2.1.0
synopsis:            Lattice-based cryptographic applications using <https://hackage.haskell.org/package/lol lol>.
homepage:            https://github.com/cpeikert/Lol
Bug-Reports:         https://github.com/cpeikert/Lol/issues
license:             GPL-3
license-file:        LICENSE
author:              Eric Crockett <ecrockett0@gmail.com>, Chris Peikert <cpeikert@alum.mit.edu>
maintainer:          Eric Crockett <ecrockett0@gmail.com>
copyright:           Eric Crockett, Chris Peikert
category:            Crypto
stability:           experimental
build-type:          Simple
extra-source-files:  README, CHANGES.md, SHE.proto
cabal-version:       >= 1.10
description:
    This library contains example cryptographic applications built using
    <https://hackage.haskell.org/package/lol lol>,
    a general-purpose library for ring-based lattice cryptography.

source-repository head
  type: git
  location: https://github.com/cpeikert/Lol

Flag llvm
  Description:  Compile via LLVM. This produces much better object code,
                but you need to have the LLVM compiler installed.

  Default:      False

Flag opt
  Description: Turn on library optimizations
  Default:     True
  Manual:      False

library
  default-language:   Haskell2010

  if flag(llvm)
    ghc-options: -fllvm -optlo-O3

  -- ghc optimizations
  if flag(opt)
    ghc-options: -O3 -funbox-strict-fields -fwarn-dodgy-imports
    ghc-options: -fno-liberate-case -funfolding-use-threshold1000 -funfolding-keeness-factor1000

  exposed-modules:
    Crypto.Lol.Applications.KeyHomomorphicPRF
    Crypto.Lol.Applications.SymmSHE

    Crypto.Proto.SHE
    Crypto.Proto.SHE.KSHint
    Crypto.Proto.SHE.RqPolynomial
    Crypto.Proto.SHE.SecretKey
    Crypto.Proto.SHE.TunnelHint

    Crypto.Lol.Applications.Tests
    Crypto.Lol.Applications.Benchmarks
    Crypto.Lol.Applications.Examples

  other-modules:
    Crypto.Lol.Applications.Tests.SHETests
    Crypto.Lol.Applications.Tests.Default
    Crypto.Lol.Applications.Benchmarks.KHPRFBenches
    Crypto.Lol.Applications.Benchmarks.SHEBenches
    Crypto.Lol.Applications.Benchmarks.Default
    Crypto.Lol.Applications.Examples.KHPRF
    Crypto.Lol.Applications.Examples.SymmSHE

  build-depends:
    DRBG < 0.6,
    MonadRandom >= 0.2 && < 0.6,
    base >= 4.9 && < 4.14,
    containers < 0.7,
    crypto-api < 0.14,
    deepseq >= 1.4.1.1 && < 1.5,
    filepath < 1.5,
    lol >= 0.7.0.0 && < 0.8,
    mtl < 2.3,
    numeric-prelude >= 0.4.2 && < 0.5,
    options < 1.3,
    protocol-buffers < 2.5,
    protocol-buffers-descriptor < 2.5,
    singletons < 2.7,
    split < 0.3,
    test-framework < 0.9,
    time < 2.0,
    QuickCheck < 3.0
